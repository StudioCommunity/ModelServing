
trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.6'

- script: |
    cd src/azureml-studio-model
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install azureml-studio-model dependencies'

- script: |
    cd src/azureml-studio-model
    python -m pytest -s
  displayName: 'PyTest azure-studio-model'

- script: |
    pip freeze --exclude-editable | xargs -r pip uninstall -y
  displayName: 'Clean all installed packages for azureml-studio-score test'

- script: |
    cd src/azureml-studio-model
    python setup.py install
  displayName: 'Install azureml-studio-model'

- script: |
    cd src/azureml-studio-score
    python -m pip install --upgrade pip
    pip install -r requirements.txt --extra-index-url=https://test.pypi.org/simple
  displayName: 'Install azureml-studio-score dependencies'

- script: |
    cd src/azureml-studio-score 
    python -m pytest -s --ignore=azureml/visual_interface/score/score/tests/pytorch/InputPort1/
  displayName: 'PyTest azure-studio-score'

# Save build number to file
- script: |
    echo $(Build.BuildNumber)
    echo $(Build.BuildNumber) > src/build.version
  displayName: Save build number to file

# Install python distributions like wheel, twine etc
- script: |
    pip install wheel
    pip install twine
  displayName: Install wheel and twine

- script: |
    cd src/azureml-studio-model
    python setup.py bdist_wheel
  displayName: 'Create model whl file'

- script: |
    cd src/azureml-studio-score
    python setup.py bdist_wheel
  displayName: 'Create score whl file'

- task: TwineAuthenticate@1
  displayName: 'Publish model whl file to artifacts'
  inputs:
    artifactFeed: CustomModules

# Use command line script to 'twine upload', use -r to pass the repository name and --config-file to pass the environment variable set by the authenticate task.
- script: |
    python -m twine upload -r "CustomModules" --config-file $(PYPIRC_PATH) src/azureml-studio-model/dist/*.whl
    python -m twine upload -r "CustomModules" --config-file $(PYPIRC_PATH) src/azureml-studio-score/dist/*.whl
  displayName: 'Upload twine'

- script: |
    git push https://$(GitHubUserName):$(GitHubPassword)@github.com/$(GitHubUserName)/$(GitHubRepo).git 'refs/remotes/origin/*:refs/heads/*' -f
  displayName: 'Push to GitHub'